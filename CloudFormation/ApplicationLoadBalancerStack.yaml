---
AWSTemplateFormatVersion: 2010-09-09
Description: Application load balancer template laboration

Parameters:
  ALBSecGrpName:
    Description: "Set app load balancer name"
    Type: String
    Default: ALBSecGrp

Resources: 

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Ref ALBSecGrpName 
      GroupDescription: "Open port 80 HTTPS for load balancer"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
  
  AutoScalingSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: AutoScalingSecurityGroup 
      GroupDescription: "Open HTTPS from load balancer security group"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId:
            !GetAtt LoadBalancerSecurityGroup.GroupId
  
  EFSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: EFSSecurityGroup 
      GroupDescription: "Open access to ESF for Autoscaling group"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          SourceSecurityGroupId:
            !GetAtt AutoScalingSecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          SourceSecurityGroupId:
            !GetAtt ProvisionSecurityGroup.GroupId

  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: RDSSecurityGroup 
      GroupDescription: "Open access to RDS for Autoscaling group and Provisioning VM"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId:
            !GetAtt AutoScalingSecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId:
            !GetAtt ProvisionSecurityGroup.GroupId

  ProvisionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ProvisionSecurityGroup 
      GroupDescription: "Open SSH access to Provisioning VM on port 22"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  AutoScalingTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /health
      HealthCheckProtocol: HTTP
      Port: 80
      Protocol: HTTP
      VpcId: vpc-03a33e6a6982b9f67

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      IpAddressType: ipv4
      Name: "WordpressLoadBalancer"
      Scheme: "internet-facing"
      SecurityGroups: 
        - !GetAtt LoadBalancerSecurityGroup.GroupId
      SubnetMappings:
        - SubnetId: subnet-074559faefce7f792
        - SubnetId: subnet-050c3cc7e37d58444
        - SubnetId: subnet-026b8575fca0c965a

  ApplicationLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AutoScalingTargetGroup
  
  ProvisioningVM:
      Type: AWS::EC2::Instance
      Properties:
        KeyName: HomeDesktopKey
        ImageId: ami-04f1014c8adcfa670
        InstanceType: t2.micro
        SecurityGroupIds:
          - !GetAtt ProvisionSecurityGroup.GroupId
        UserData: !Base64 |
          #!/bin/bash -ex
          # put your script here

  LaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateName: template-for-asg
      LaunchTemplateData:
        SecurityGroupIds:
          - !GetAtt AutoScalingSecurityGroup.GroupId
        ImageId: ami-04f1014c8adcfa670
        InstanceType: t2.micro
        UserData:
          Fn::Base64: |
            #!/bin/bash
            dnf update -y
            dnf install -y httpd wget php-fpm php-mysqli php-json php php-devel
            systemctl start httpd
            systemctl enable httpd
            usermod -a -G apache ec2-user
            chown -R ec2-user:apache /var/www
            chmod 2775 /var/www && find /var/www -type d -exec sudo chmod 2775 {} \;
            find /var/www -type f -exec sudo chmod 0664 {} \;
            echo "<?php phpinfo(); ?>" > /var/www/html/phpinfo.php
            yum install -y amazon-efs-utils

  AutoScalingGrp:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      AutoScalingGroupName: "AutoScalingGrp"
      AvailabilityZones: 
        - eu-west-1a
        - eu-west-1b
        - eu-west-1c
      CapacityRebalance: true
      DefaultInstanceWarmup: 30
      DesiredCapacity: "2"
      HealthCheckGracePeriod: 30
      LaunchTemplate: 
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      TargetGroupARNs: 
        - !GetAtt AutoScalingTargetGroup.TargetGroupArn
      MaxSize: "4"
      MinSize: "1"
      NewInstancesProtectedFromScaleIn: true
      
  EFS:
    Type: AWS::EFS::FileSystem
    Properties: 
      Encrypted: true
      PerformanceMode: generalPurpose

  AutoscalingMountTarget1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFS
      SubnetId: subnet-074559faefce7f792
      SecurityGroups:
        - !Ref AutoScalingSecurityGroup
  
  AutoscalingMountTarget2:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFS
      SubnetId: subnet-050c3cc7e37d58444
      SecurityGroups:
        - !Ref AutoScalingSecurityGroup
  
  AutoscalingMountTarget3:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFS
      SubnetId: subnet-026b8575fca0c965a
      SecurityGroups:
        - !Ref AutoScalingSecurityGroup
  
  EFSAccessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId: !Ref EFS
      RootDirectory: 
        RootDirectory FIND OUT ROOT DIRECTORY?





      TODO Create 'EFS' and RDS resources, Installing LAMP, look into wordpress tutorial